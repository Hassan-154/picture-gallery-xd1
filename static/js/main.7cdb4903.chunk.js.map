{"version":3,"sources":["firebase/config.js","Hooks/useFireStore.js","comonents/jsFiles/ImageGrid.js","comonents/jsFiles/Title.js","Hooks/useStorage.js","comonents/jsFiles/ProgressBar.js","comonents/jsFiles/UploadForm.js","App.js","reportWebVitals.js","index.js"],"names":["firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","projectStorage","storage","projectFirestore","firestore","timestamp","FieldValue","serverTimestamp","useFireStore","collection","useState","docs","setDocs","useEffect","unsub","orderBy","onSnapshot","snap","documents","forEach","doc","push","data","id","ImageGrid","console","log","className","map","src","url","alt","Title","useStorage","file","progress","setProgress","error","setError","setUrl","storageRef","ref","name","collectionRef","put","on","percentage","bytesTransferred","totalBytes","err","a","getDownloadURL","createdAt","add","ProgressBar","setFile","style","width","UploadForm","type","onChange","e","selected","target","files","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.7cdb4903.chunk.js","sourcesContent":["  //import firebase\r\n  import firebase from 'firebase/app';\r\n  //import firebase storge\r\n  import 'firebase/storage'\r\n  //import firestore for data base\r\n  import 'firebase/firestore'\r\n  // Your web app's Firebase configuration\r\n  var firebaseConfig = {\r\n    apiKey: \"AIzaSyDRqBTEE1U0K4kMVKsvRyrg-AZ4la0j79o\",\r\n    authDomain: \"picture-gallery-xd1.firebaseapp.com\",\r\n    projectId: \"picture-gallery-xd1\",\r\n    storageBucket: \"picture-gallery-xd1.appspot.com\",\r\n    messagingSenderId: \"211808647290\",\r\n    appId: \"1:211808647290:web:5bf6fa443c756fb79ca3c3\"\r\n  };\r\n  // Initialize Firebase\r\n  firebase.initializeApp(firebaseConfig);\r\n  //initialize storage\r\n  const projectStorage=firebase.storage();\r\n  //initialize firestore\r\n  const projectFirestore= firebase.firestore();\r\n  //import timeStamp\r\n  const timestamp = firebase.firestore.FieldValue.serverTimestamp;\r\n  //export both\r\n  export {projectStorage, projectFirestore, timestamp};","import {useState,useEffect} from 'react'\r\nimport { projectFirestore } from '../firebase/config' \r\nfunction useFireStore(collection) {\r\n    const [docs, setDocs] = useState([])\r\n    useEffect(()=>{\r\n       const unsub = projectFirestore.collection(collection)\r\n        .orderBy('createdAt','desc')\r\n        .onSnapshot((snap)=>{\r\n            let documents = [];\r\n            snap.forEach(doc =>{\r\n                documents.push({...doc.data(), id: doc.id})\r\n            })\r\n            setDocs(documents) \r\n        })\r\n        return () => unsub()\r\n    },[collection])\r\n    return { docs }\r\n}\r\n\r\nexport default useFireStore\r\n","import React from 'react'\r\nimport useFireStore from '../../Hooks/useFireStore'\r\nimport Grid from '@material-ui/core/Grid';\r\n\r\nconst ImageGrid =() => {\r\n    const { docs } = useFireStore ('images')\r\n    console.log(docs);\r\n    return (\r\n        <div className=\"img-grid\">\r\n        { docs && docs.map(doc => (\r\n            <div className=\"img-warp\" key={doc.id}>\r\n            <img src={doc.url} alt=\"uplaoded pic\"/>\r\n            </div>\r\n        ))}\r\n            \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ImageGrid\r\n\r\n","import React from 'react'\r\nimport '../cssFiles/Title.css'\r\nfunction Title() {\r\n    return (\r\n        <div className=\"title\">\r\n            <h2>FireGram</h2>\r\n            <h1>Your Picture</h1>\r\n            <p>“A picture held us captive. And we could not get outside it, for it lay in our language and language seemed to repeat it to us inexorably.”</p>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Title\r\n","import React,{useState,useEffect} from 'react'\r\n//import project storage\r\nimport { projectStorage,projectFirestore,timestamp } from '../firebase/config'\r\nfunction useStorage(file) {\r\n    //define useStates\r\n    const [progress, setProgress] = useState(0);\r\n    const [error, setError] = useState(0);\r\n    const [url, setUrl] = useState(0);\r\n    useEffect(()=>{\r\n        //reference\r\n        const storageRef = projectStorage.ref(file.name)\r\n        const collectionRef = projectFirestore.collection('images');\r\n\r\n        storageRef.put(file).on('state_changed', (snap) => {\r\n            let percentage = (snap.bytesTransferred / snap.totalBytes) * 100;\r\n            setProgress(percentage)\r\n        }, (err)=>{\r\n            setError(err)\r\n        }, async () => {\r\n            const url = await storageRef.getDownloadURL();\r\n            const createdAt = timestamp();\r\n            collectionRef.add({ url, createdAt})\r\n            setUrl(url)\r\n        })\r\n    },[file])\r\n    return {progress, url, error}\r\n}\r\n\r\nexport default useStorage\r\n","import React,{useEffect} from 'react'\r\nimport '../cssFiles/ProgressBar.css'\r\nimport useStorage from '../../Hooks/useStorage'\r\n\r\nfunction ProgressBar({file, setFile}) {\r\n    const { url, progress} = useStorage(file)\r\n    useEffect(()=>{\r\n        if(url){\r\n            setFile(null)\r\n        }\r\n    },[url, setFile])\r\n    return (\r\n\r\n        <div className=\"progress__bar\"  style={{width: progress + '%'}}></div>\r\n        \r\n    )\r\n}\r\n\r\nexport default ProgressBar\r\n","import React,{useState} from 'react'\r\nimport ProgressBar from './ProgressBar';\r\n\r\nfunction UploadForm() {\r\n    const [file, setFile] = useState(null);\r\n    const [error, setError] = useState(null);\r\n    const types = ['image/png','image/jpg']\r\n    const changehandler=(e)=>{\r\n        let selected = e.target.files[0];\r\n        if(selected){\r\n            setFile(selected);\r\n            setError(\"\")\r\n        } else{\r\n            setFile(null);\r\n            setError('please select an image file (png or jpg)')\r\n\r\n        }\r\n    }\r\n    return (\r\n        <form>\r\n        <label className=\"file-box\">\r\n            <input className=\"file\" type=\"file\" onChange={changehandler}/>\r\n            <span className=\"span\">+</span>\r\n            </label>\r\n            <div className=\"output\">\r\n            { error && <div className=\"error\">{ error }</div>}\r\n            { file && <div className=\"file__name\">{ file.name }</div>}\r\n            { file && <ProgressBar file={file} setFile={setFile} />}\r\n            </div>\r\n        </form>\r\n    )\r\n}\r\n\r\nexport default UploadForm\r\n","import './App.css';\nimport ImageGrid from './comonents/jsFiles/ImageGrid';\nimport Title from './comonents/jsFiles/Title';\nimport UploadForm from './comonents/jsFiles/UploadForm';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n     <Title/>\n     <UploadForm/>\n     <ImageGrid/>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}